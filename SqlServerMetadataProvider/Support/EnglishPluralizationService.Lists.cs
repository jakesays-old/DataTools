using System.Collections.Generic;

namespace Std.Tools.Data.Metadata.Support
{
	internal partial class EnglishPluralizationService
	{
		private readonly Dictionary<string, string> _assimilatedClassicalInflectionDictionary =
			new Dictionary<string, string>()
			{
				{"alumna", "alumnae"},
				{"alga", "algae"},
				{"vertebra", "vertebrae"},
				{"codex", "codices"},
				{"murex", "murices"},
				{"silex", "silices"},
				{"aphelion", "aphelia"},
				{"hyperbaton", "hyperbata"},
				{"perihelion", "perihelia"},
				{"asyndeton", "asyndeta"},
				{"noumenon", "noumena"},
				{"phenomenon", "phenomena"},
				{"criterion", "criteria"},
				{"organon", "organa"},
				{"prolegomenon", "prolegomena"},
				{"agendum", "agenda"},
				{"datum", "data"},
				{"extremum", "extrema"},
				{"bacterium", "bacteria"},
				{"desideratum", "desiderata"},
				{"stratum", "strata"},
				{"candelabrum", "candelabra"},
				{"erratum", "errata"},
				{"ovum", "ova"},
				{"forum", "fora"},
				{"addendum", "addenda"},
				{"stadium", "stadia"},
				{"automaton", "automata"},
				{"polyhedron", "polyhedra"},
			};

		private readonly Dictionary<string, string> _classicalInflectionDictionary =
			new Dictionary<string, string>()
			{
				{"stamen", "stamina"},
				{"foramen", "foramina"},
				{"lumen", "lumina"},
				{"anathema", "anathemata"},
				{"----", "----ta"},
				{"oedema", "oedemata"},
				{"bema", "bemata"},
				{"enigma", "enigmata"},
				{"sarcoma", "sarcomata"},
				{"carcinoma", "carcinomata"},
				{"gumma", "gummata"},
				{"schema", "schemata"},
				{"charisma", "charismata"},
				{"lemma", "lemmata"},
				{"soma", "somata"},
				{"diploma", "diplomata"},
				{"lymphoma", "lymphomata"},
				{"stigma", "stigmata"},
				{"dogma", "dogmata"},
				{"magma", "magmata"},
				{"stoma", "stomata"},
				{"drama", "dramata"},
				{"melisma", "melismata"},
				{"trauma", "traumata"},
				{"edema", "edemata"},
				{"miasma", "miasmata"},
				{"abscissa", "abscissae"},
				{"formula", "formulae"},
				{"medusa", "medusae"},
				{"amoeba", "amoebae"},
				{"hydra", "hydrae"},
				{"nebula", "nebulae"},
				{"antenna", "antennae"},
				{"hyperbola", "hyperbolae"},
				{"nova", "novae"},
				{"aurora", "aurorae"},
				{"lacuna", "lacunae"},
				{"parabola", "parabolae"},
				{"apex", "apices"},
				{"latex", "latices"},
				{"vertex", "vertices"},
				{"cortex", "cortices"},
				{"pontifex", "pontifices"},
				{"vortex", "vortices"},
				{"index", "indices"},
				{"simplex", "simplices"},
				{"iris", "irides"},
				{"----oris", "----orides"},
				{"alto", "alti"},
				{"contralto", "contralti"},
				{"soprano", "soprani"},
				{"b----o", "b----i"},
				{"crescendo", "crescendi"},
				{"tempo", "tempi"},
				{"canto", "canti"},
				{"solo", "soli"},
				{"aquarium", "aquaria"},
				{"interregnum", "interregna"},
				{"quantum", "quanta"},
				{"compendium", "compendia"},
				{"lustrum", "lustra"},
				{"rostrum", "rostra"},
				{"consortium", "consortia"},
				{"maximum", "maxima"},
				{"spectrum", "spectra"},
				{"cranium", "crania"},
				{"medium", "media"},
				{"speculum", "specula"},
				{"curriculum", "curricula"},
				{"memorandum", "memoranda"},
				{"stadium", "stadia"},
				{"dictum", "dicta"},
				{"millenium", "millenia"},
				{"t----zium", "t----zia"},
				{"emporium", "emporia"},
				{"minimum", "minima"},
				{"ultimatum", "ultimata"},
				{"enconium", "enconia"},
				{"momentum", "momenta"},
				{"vacuum", "vacua"},
				{"gymnasium", "gymnasia"},
				{"optimum", "optima"},
				{"velum", "vela"},
				{"honorarium", "honoraria"},
				{"phylum", "phyla"},
				{"focus", "foci"},
				{"nimbus", "nimbi"},
				{"succubus", "succubi"},
				{"fungus", "fungi"},
				{"nucleolus", "nucleoli"},
				{"torus", "tori"},
				{"genius", "genii"},
				{"radius", "radii"},
				{"umbilicus", "umbilici"},
				{"incubus", "incubi"},
				{"stylus", "styli"},
				{"uterus", "uteri"},
				{"stimulus", "stimuli"},
				{"apparatus", "apparatus"},
				{"impetus", "impetus"},
				{"prospectus", "prospectus"},
				{"cantus", "cantus"},
				{"nexus", "nexus"},
				{"sinus", "sinus"},
				{"coitus", "coitus"},
				{"plexus", "plexus"},
				{"status", "status"},
				{"hiatus", "hiatus"},
				{"afreet", "afreeti"},
				{"afrit", "afriti"},
				{"efreet", "efreeti"},
				{"cherub", "cherubim"},
				{"goy", "goyim"},
				{"seraph", "seraphim"},
				{"alumnus", "alumni"}
			};

		private readonly Dictionary<string, string> _irregularPluralsDictionary =
			new Dictionary<string, string>()
			{
				{"brother", "brothers"},
				{"child", "children"},
				{"cow", "cows"},
				{"ephemeris", "ephemerides"},
				{"genie", "genies"},
				{"money", "moneys"},
				{"mongoose", "mongooses"},
				{"mythos", "mythoi"},
				{"octopus", "octopuses"},
				{"ox", "oxen"},
				{"soliloquy", "soliloquies"},
				{"trilby", "trilbys"},
				{"crisis", "crises"},
				{"synopsis", "synopses"},
				{"rose", "roses"},
				{"gas", "gases"},
				{"bus", "buses"},
				{"axis", "axes"},
				{"memo", "memos"},
				{"casino", "casinos"},
				{"silo", "silos"},
				{"stereo", "stereos"},
				{"studio", "studios"},
				{"lens", "lenses"},
				{"alias", "aliases"},
				{"pie", "pies"},
				{"corpus", "corpora"},
				{"viscus", "viscera"},
				{"hippopotamus", "hippopotami"},
				{"trace", "traces"},
				{"person", "people"},
				{"chili", "chilies"},
				{"analysis", "analyses"},
				{"basis", "bases"},
				{"neurosis", "neuroses"},
				{"oasis", "oases"},
				{"synthesis", "syntheses"},
				{"thesis", "theses"},
				{"change", "changes"},
				{"lie", "lies"},
				{"calorie", "calories"},
				{"freebie", "freebies"},
				{"case", "cases"},
				{"house", "houses"},
				{"valve", "valves"},
				{"cloth", "clothes"},
				{"tie", "ties"},
				{"movie", "movies"},
				{"bonus", "bonuses"},
				{"specimen", "specimens"}
			};

		private readonly StringBidirectionalDictionary _irregularVerbPluralizationService;

		private readonly List<string> _knownConflictingPluralList =
			new List<string>()
			{
				"they",
				"them",
				"their",
				"have",
				"were",
				"yourself",
				"are"
			};

		private readonly Dictionary<string, string> _oSuffixDictionary =
			new Dictionary<string, string>()
			{
				{"albino", "albinos"},
				{"generalissimo", "generalissimos"},
				{"manifesto", "manifestos"},
				{"archipelago", "archipelagos"},
				{"ghetto", "ghettos"},
				{"medico", "medicos"},
				{"armadillo", "armadillos"},
				{"guano", "guanos"},
				{"octavo", "octavos"},
				{"commando", "commandos"},
				{"inferno", "infernos"},
				{"photo", "photos"},
				{"ditto", "dittos"},
				{"jumbo", "jumbos"},
				{"pro", "pros"},
				{"dynamo", "dynamos"},
				{"lingo", "lingos"},
				{"quarto", "quartos"},
				{"embryo", "embryos"},
				{"lumbago", "lumbagos"},
				{"rhino", "rhinos"},
				{"fiasco", "fiascos"},
				{"magneto", "magnetos"},
				{"stylo", "stylos"}
			};

		private readonly List<string> _pronounList =
			new List<string>()
			{
				"I",
				"we",
				"you",
				"he",
				"she",
				"they",
				"it",
				"me",
				"us",
				"him",
				"her",
				"them",
				"myself",
				"ourselves",
				"yourself",
				"himself",
				"herself",
				"itself",
				"oneself",
				"oneselves",
				"my",
				"our",
				"your",
				"his",
				"their",
				"its",
				"mine",
				"yours",
				"hers",
				"theirs",
				"this",
				"that",
				"these",
				"those",
				"all",
				"another",
				"any",
				"anybody",
				"anyone",
				"anything",
				"both",
				"each",
				"other",
				"either",
				"everyone",
				"everybody",
				"everything",
				"most",
				"much",
				"nothing",
				"nobody",
				"none",
				"one",
				"others",
				"some",
				"somebody",
				"someone",
				"something",
				"what",
				"whatever",
				"which",
				"whichever",
				"who",
				"whoever",
				"whom",
				"whomever",
				"whose",
			};

		private readonly string[] _uninflectiveSuffixList =
			{"fish", "ois", "sheep", "deer", "pos", "itis", "ism"};

		private readonly string[] _uninflectiveWordList =
		{
			"bison", "flounder", "pliers", "bream", "gallows", "proceedings",
			"breeches", "graffiti", "rabies", "britches", "headquarters", "salmon",
			"carp", "----", "scissors", "ch----is", "high-jinks", "sea-bass",
			"clippers", "homework", "series", "cod", "innings", "shears", "contretemps",
			"jackanapes", "species", "corps", "mackerel", "swine", "debris", "measles",
			"trout", "diabetes", "mews", "tuna", "djinn", "mumps", "whiting", "eland",
			"news", "wildebeest", "elk", "pincers", "police", "hair", "ice", "chaos",
			"milk", "cotton", "pneumonoultramicroscopicsilicovolcanoconiosis",
			"information", "aircraft", "scabies", "traffic", "corn", "millet", "rice",
			"hay", "----", "tobacco", "cabbage", "okra", "broccoli", "asparagus",
			"lettuce", "beef", "pork", "venison", "mutton", "cattle", "offspring",
			"molasses", "shambles", "shingles"
		};

		private readonly Dictionary<string, string> _wordsEndingWithInxAnxYnxDictionary =
			new Dictionary<string, string>()
			{
				{"sphinx", "sphinxes"},
				{"larynx", "larynges"},
				{"lynx", "lynxes"},
				{"pharynx", "pharynxes"},
				{"phalanx", "phalanxes"}
			};

		// this list contains the words ending with "se" and we special case these words since 
		// we need to add a rule for "ses" singularize to "s"

		private readonly Dictionary<string, string> _wordsEndingWithSeDictionary =
			new Dictionary<string, string>()
			{
				{"house", "houses"},
				{"case", "cases"},
				{"enterprise", "enterprises"},
				{"purchase", "purchases"},
				{"surprise", "surprises"},
				{"release", "releases"},
				{"disease", "diseases"},
				{"promise", "promises"},
				{"refuse", "refuses"},
				{"whose", "whoses"},
				{"phase", "phases"},
				{"noise", "noises"},
				{"nurse", "nurses"},
				{"rose", "roses"},
				{"franchise", "franchises"},
				{"supervise", "supervises"},
				{"farmhouse", "farmhouses"},
				{"suitcase", "suitcases"},
				{"recourse", "recourses"},
				{"impulse", "impulses"},
				{"license", "licenses"},
				{"diocese", "dioceses"},
				{"excise", "excises"},
				{"demise", "demises"},
				{"blouse", "blouses"},
				{"bruise", "bruises"},
				{"misuse", "misuses"},
				{"curse", "curses"},
				{"prose", "proses"},
				{"purse", "purses"},
				{"goose", "gooses"},
				{"tease", "teases"},
				{"poise", "poises"},
				{"vase", "vases"},
				{"fuse", "fuses"},
				{"muse", "muses"},
				{"slaughterhouse", "slaughterhouses"},
				{"clearinghouse", "clearinghouses"},
				{"endonuclease", "endonucleases"},
				{"steeplechase", "steeplechases"},
				{"metamorphose", "metamorphoses"},
				{"----", "----s"},
				{"commonsense", "commonsenses"},
				{"intersperse", "intersperses"},
				{"merchandise", "merchandises"},
				{"phosphatase", "phosphatases"},
				{"summerhouse", "summerhouses"},
				{"watercourse", "watercourses"},
				{"catchphrase", "catchphrases"},
				{"compromise", "compromises"},
				{"greenhouse", "greenhouses"},
				{"lighthouse", "lighthouses"},
				{"paraphrase", "paraphrases"},
				{"mayonnaise", "mayonnaises"},
				{"----course", "----courses"},
				{"apocalypse", "apocalypses"},
				{"courthouse", "courthouses"},
				{"powerhouse", "powerhouses"},
				{"storehouse", "storehouses"},
				{"glasshouse", "glasshouses"},
				{"hypotenuse", "hypotenuses"},
				{"peroxidase", "peroxidases"},
				{"pillowcase", "pillowcases"},
				{"roundhouse", "roundhouses"},
				{"streetwise", "streetwises"},
				{"expertise", "expertises"},
				{"discourse", "discourses"},
				{"warehouse", "warehouses"},
				{"staircase", "staircases"},
				{"workhouse", "workhouses"},
				{"briefcase", "briefcases"},
				{"clubhouse", "clubhouses"},
				{"clockwise", "clockwises"},
				{"concourse", "concourses"},
				{"playhouse", "playhouses"},
				{"turquoise", "turquoises"},
				{"boathouse", "boathouses"},
				{"cellulose", "celluloses"},
				{"epitomise", "epitomises"},
				{"gatehouse", "gatehouses"},
				{"grandiose", "grandioses"},
				{"menopause", "menopauses"},
				{"penthouse", "penthouses"},
				{"----horse", "----horses"},
				{"transpose", "transposes"},
				{"almshouse", "almshouses"},
				{"customise", "customises"},
				{"footloose", "footlooses"},
				{"galvanise", "galvanises"},
				{"princesse", "princesses"},
				{"universe", "universes"},
				{"workhorse", "workhorses"}
			};

		private readonly Dictionary<string, string> _wordsEndingWithSisDictionary =
			new Dictionary<string, string>()
			{
				{"analysis", "analyses"},
				{"crisis", "crises"},
				{"basis", "bases"},
				{"atherosclerosis", "atheroscleroses"},
				{"electrophoresis", "electrophoreses"},
				{"psychoanalysis", "psychoanalyses"},
				{"photosynthesis", "photosyntheses"},
				{"amniocentesis", "amniocenteses"},
				{"metamorphosis", "metamorphoses"},
				{"toxoplasmosis", "toxoplasmoses"},
				{"endometriosis", "endometrioses"},
				{"tuberculosis", "tuberculoses"},
				{"pathogenesis", "pathogeneses"},
				{"osteoporosis", "osteoporoses"},
				{"parenthesis", "parentheses"},
				{"anastomosis", "anastomoses"},
				{"peristalsis", "peristalses"},
				{"hypothesis", "hypotheses"},
				{"antithesis", "antitheses"},
				{"apotheosis", "apotheoses"},
				{"thrombosis", "thromboses"},
				{"diagnosis", "diagnoses"},
				{"synthesis", "syntheses"},
				{"paralysis", "paralyses"},
				{"prognosis", "prognoses"},
				{"cirrhosis", "cirrhoses"},
				{"sclerosis", "scleroses"},
				{"psychosis", "psychoses"},
				{"apoptosis", "apoptoses"},
				{"symbiosis", "symbioses"}
			};

		private readonly Dictionary<string, string> _wordsEndingWithSusDictionary =
			new Dictionary<string, string>()
			{
				{"consensus", "consensuses"},
				{"census", "censuses"}
			};

		// this list contains all the plural words that being treated as singluar form, for example, "they" -> "they"
		private readonly Dictionary<string, string> _irregularVerbList =
			new Dictionary<string, string>()
			{
				{"am", "are"},
				{"are", "are"},
				{"is", "are"},
				{"was", "were"},
				{"were", "were"},
				{"has", "have"},
				{"have", "have"}
			};
	}
}